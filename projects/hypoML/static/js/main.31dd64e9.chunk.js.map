{"version":3,"sources":["helper.ts","const.ts","components/Models/PGlyph.ts","components/Models/ModelPainter.ts","components/Models/index.tsx","components/HypoStatus/HypoPainter.ts","components/HypoStatus/index.tsx","components/HypoInfo/index.tsx","dataService/index.ts","components/Header/index.tsx","components/InfoPanel/index.tsx","components/Overview/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["getColor","d3","d3ScaleChromatic","getSTD","values","avg","average","avgSquareDiff","map","value","diff","Math","sqrt","data","reduce","sum","length","pairedT","a","b","side","item","idx","n","t","jstat","getText","name","includes","split","flg","percentile","p","m","std","r","log","supportIcon","rejectIcon","questionIcon","dummyIcon","conditionIcon","MODELS","HYPO","info","ANALYSIS","pair","large","support","reject","less","dependHypo","ifReject","ifQuestion","ifSupport","LABELS","widthRatio","headerView","width","window","innerWidth","height","innerHeight","TitleView","margin","top","right","bottom","left","overView","HypoTextView","hypoMatrixView","modelView","pView","PGlyphPainter","viewParams","this","newParams","selector","g","xScale","domain","range","yScale","max","arr","d","line","x","y","append","datum","attr","style","i","from","to","text","toFixed","dir","mean","sd","pdf","push","NormalDist","OverViewPainter","params","details","hasDetails","selectAll","remove","join","enter","_","update","exit","models","detailLinks","detailedModels","filter","d3curve","curve","alpha","linkdata","modelData","compareData","xmin","min","xmax","accScale","modelGroup","err","points","drawDetailLinks","on","toggleDetails","pValueScale","yScaleP","pGroup","pGlyphParams","thr","call","render","Overview","props","painter","ModelPainter","nextProps","painterUpdate","className","transform","React","Component","status","xBand","yBand","getIconPath","getIconColor","undefined","j","Hypothesis","HypoPainter","hypoStatus","anlyList","acc","curr","hypoInfo","hypo","fontWeight","fontSize","fill","textColor","slice","checkResponse","response","fallback","console","error","fetchJSON","filename","axios","get","Option","Select","Header","modelSelector","defaultValue","pSelector","step","onChange","changeTHR","type","position","overflow","backgroundColor","color","padding","darkSelectStyle","InfoPanel","dataset","concept","changeResults","bind","changeConcept","changeData","e","preventDefault","replace","featureSelector","size","datasetSelector","src","lineHeight","htmlType","shape","icon","onClick","METRIC","state","res","re","Array","keys","label","toString","l","modelA","modelB","samplesA","samplesB","results","if","forEach","anly","conclu","hypos","hypoIdx","comp","dependHypoStatus","total","getModeldata","getCompareData","setState","getResults","calculateStatus","App","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.31dd64e9.chunk.js","sourcesContent":["import * as d3 from 'd3';\nimport * as d3ScaleChromatic from 'd3-scale-chromatic';\nimport * as jstat from 'jstat';\nimport {OneModel} from 'types'\n\nexport type getColorFunc = (i: number) => string;\n\n\nconst gColor = [\n  '#3366cc',\n  '#ff9900',\n  '#109618',\n  '#990099',\n  '#dc3912',\n  '#0099c6',\n  '#dd4477',\n  '#66aa00',\n  '#b82e2e',\n  '#316395',\n  '#994499',\n  '#22aa99',\n  '#aaaa11',\n  '#6633cc',\n  '#e67300',\n  '#8b0707',\n  '#651067',\n  '#329262',\n  '#5574a6',\n  '#3b3eac'\n];\n\nexport const getGoogleColor: getColorFunc = (n: number) => gColor[n % gColor.length];\n\nexport const getColor: getColorFunc = d3.scaleOrdinal<number, string>(d3ScaleChromatic.schemeSet1 as string[]);\n\n\nexport const range = (from: number, to: number, step?: number) => {\n  if (step == undefined) {\n    step = from < to ? 1 : -1\n  }\n  let arr = [], curr = from\n  while (curr < to) {\n    arr.push(curr)\n    curr += step\n  }\n  return arr\n}\n\nexport const curveMaker = (from: [number, number], to: [number, number])=>{\n  var dx = Math.abs(from[0] - to[0]),\n    dy = Math.abs(from[1] - to[1]),\n    dr = Math.sqrt(dx * dx + dy * dy);\n\n    return \"M\" + from[0] + \",\" + from[1] + \"A\" + dr + \",\" + dr + \" 0 0,1 \" + to[0] + \",\" + to[1];\n}\n\nexport const curve2Maker = (from: [number, number], to: [number, number])=>{\n  var dx = Math.abs(from[0] - to[0]),\n    dy = Math.abs(from[1] - to[1]),\n    midx = from[0]+0.5*dx,\n    midy = from[1]+0.5*dy\n\n    return `M ${from[0]}, ${from[1]} C ${midx}, ${midy} M ${midx}, ${midy} C${from[0]}, ${from[1]}`\n}\n\n\n// statistic \n\nexport function getSTD(values: number[]) {\n  var avg = average(values);\n\n  var squareDiffs = values.map(function (value) {\n    var diff = value - avg;\n    var sqrDiff = diff * diff;\n    return sqrDiff;\n  });\n\n  var avgSquareDiff = average(squareDiffs);\n\n  var stdDev = Math.sqrt(avgSquareDiff);\n  return stdDev;\n}\n\nexport function get95conf(values:number[]):number{\n  let std = getSTD(values)\n\n  return 1.96*std/Math.sqrt(values.length)\n}\n\nfunction average(data: number[]) {\n  var sum = data.reduce(function (sum, value) {\n    return sum + value;\n  }, 0);\n\n  var avg = sum / data.length;\n  return avg;\n}\n\n\nexport const pairedT = (a:number[], b:number[], side:1|2):number=>{\n  let diff = a.map((item,idx)=>item-b[idx]),\n  n = diff.length,\n  diffMean = average(diff),\n  sd =  getSTD(diff),\n  se = sd/Math.sqrt(n),\n  t= diffMean/se\n\n  return jstat.ttest(t, n-1, side)\n\n}\n\n// ******************\n// \n// ******************\n\nexport function getText(name: string) {\n  if (name.includes('_')){\n    name = name.split('_')[1]\n  }\n  let flg = name.split('')\n  return `R(${flg[0] == '0' ? \"M\" : \"M+\"}, ${flg[1] == '0' ? 'D' : \"D+\"})`\n\n}\n\n// *******************\n// \n// *******************\nexport function NormalDist(mean:number, sd:number):Array<[number, number]> {\n  let data = [];\n  for (var i = mean - 4 * sd; i < mean + 4 * sd; i += 0.1) {\n      let q = i\n      let p = jstat.normal.pdf(i, mean, sd);\n      let arr: [number, number] = [q,p]\n      data.push(arr);\n  };\n  return data;\n}\n\nexport function percentile(p:number, m:number, std:number):number {\n\n  // P: [0, 0.5]\n  // return: z so that pro(x>z) = p\n\n  var a0= 2.5066282,  a1=-18.6150006,  a2= 41.3911977,   a3=-25.4410605,\n      b1=-8.4735109,  b2= 23.0833674,  b3=-21.0622410,   b4=  3.1308291,\n      c0=-2.7871893,  c1= -2.2979648,  c2=  4.8501413,   c3=  2.3212128,\n      d1= 3.5438892,  d2=  1.6370678, r, z;\n\n  if (p<0.08) {\n      r=Math.sqrt(-Math.log(p));\n      z=(((c3*r+c2)*r+c1)*r+c0)/((d2*r+d1)*r+1);\n  } else {\n      p = 0.5-p\n      r=p*p;\n      z=p*(((a3*r+a2)*r+a1)*r+a0)/((((b4*r+b3)*r+b2)*r+b1)*r+1);\n  }\n\n  return z*std+m\n}\n\n\n// *************\n// p value -> hypo reationship\n// **************\n// export function getHypo(ma:OneModel,mb:OneModel, p:number, th:number):{F:number|null, M:number|null, comb:'and'|'or'|null}{\n//   let flgA = ma.name.split('_')[1], flgB = mb.name.split('_')[1]\n//   let exp = [flgA, flgB].sort().reverse()\n//   // swap\n//   if (exp[0]===mb.name.split('_')[1]){\n//     [ma, mb] = [mb, ma]\n//   }\n//   switch(exp.join('_')){\n//     case '11_00':\n//       if (p>th) return {F:0, M:1, comb:'or'}\n//       else  if (ma.avg>mb.avg) return {F:1, M:0, comb:'and'}\n//       else if (ma.avg<mb.avg) return {F:0, M:0, comb:'and'}\n      \n\n//     case '11_10':\n//       if (p>th) return {F:0, M:null, comb:null}\n//       else if (ma.avg>mb.avg) return {F:1, M:null, comb:null}\n//       else if (ma.avg<mb.avg) return {F:0, M:null, comb:null} \n\n//     case '10_00':\n//       if (p>th) return {F:0, M:null, comb:null}\n//       else  if (ma.avg>mb.avg) return {F:0, M:1, comb:'and'}\n//       else if (ma.avg<mb.avg) return {F:1, M:null, comb:null}\n       \n//     case '01_00':\n//       if (p>th) return {F:null, M:null, comb:null}\n//       else if (ma.avg>mb.avg) return {F:null, M:null, comb:null}\n//       else if (ma.avg<mb.avg) return {F:null, M:null, comb:null}\n      \n\n//     case '11_01':\n//       if (p>th) return {F:0, M:1, comb:'or'}\n//       else if (ma.avg>mb.avg) return {F:1, M:0, comb:'and'}\n//       else if (ma.avg<mb.avg) return {F:0, M:0, comb:'and'}\n    \n//     case '10_01':\n//       if (p>th) return {F:0, M:null, comb:null}\n//       else if (ma.avg>mb.avg) return {F:0, M:1, comb:'and'}\n//       else if (ma.avg<mb.avg) return {F:1, M:null, comb:null}\n\n//       default:\n//         return {F:null, M:null, comb:null}\n       \n//   }\n\n\n\n// }\n\nexport const supportIcon = \"M11.2,0A11.2,11.2,0,1,0,22.4,11.2,11.21,11.21,0,0,0,11.2,0ZM16,7.54l-5.27,7.3A.8.8,0,0,1,9.66,15a.81.81,0,0,1-.18-.19L6.36,10.52a.21.21,0,0,1,.17-.32H7.7a.8.8,0,0,1,.64.34L10.13,13l3.93-5.45a.77.77,0,0,1,.64-.33h1.18A.2.2,0,0,1,16,7.54Z\"\nexport const rejectIcon = \"M11.2,0A11.2,11.2,0,1,0,22.4,11.2,11.21,11.21,0,0,0,11.2,0Zm4.14,15.46H13.69l-2.49-3-2.48,3H7.07a.19.19,0,0,1-.2-.2.22.22,0,0,1,0-.13l3.26-3.87L6.91,7.38a.23.23,0,0,1,0-.14.2.2,0,0,1,.2-.2H8.72l2.48,3,2.48-3h1.65a.2.2,0,0,1,.2.2.21.21,0,0,1,0,.13l-3.24,3.87,3.25,3.88a.19.19,0,0,1,0,.13A.2.2,0,0,1,15.34,15.46Z\"\nexport const questionIcon = \"M11.2,0A11.2,11.2,0,1,0,22.4,11.2,11.21,11.21,0,0,0,11.2,0Zm0,17.7a1,1,0,1,1,1-1A1,1,0,0,1,11.2,17.7Zm1.57-5.49A1.21,1.21,0,0,0,12,13.33v.57a.2.2,0,0,1-.2.2H10.6a.2.2,0,0,1-.2-.2v-.54a2.84,2.84,0,0,1,.5-1.62,2.79,2.79,0,0,1,1.3-1A2,2,0,0,0,13.6,8.9a2.23,2.23,0,0,0-2.4-2,2.23,2.23,0,0,0-2.4,2v.19a.2.2,0,0,1-.2.2H7.4a.2.2,0,0,1-.2-.2V8.9A3.4,3.4,0,0,1,8.41,6.32a4.33,4.33,0,0,1,5.58,0A3.4,3.4,0,0,1,15.2,8.9,3.61,3.61,0,0,1,12.77,12.21Z\"\nexport const dummyIcon = \"M11.7.5A11.2,11.2,0,1,0,22.9,11.7,11.21,11.21,0,0,0,11.7.5Z\"\nexport const conditionIcon = \"M13.46,0C11.22,0,0,11.48,0,13.46S12,26.93,13.46,26.93,26.93,15,26.93,13.46C26.93,11.65,15.79,0,13.46,0Zm.17,20.14c-3.31,0-5.21-2.2-5.21-5.86V12.71c0-3.69,1.9-5.92,5.2-5.92,2.84,0,4.89,1.83,4.89,4.43a.14.14,0,0,1-.14.14h-1.7a.23.23,0,0,1-.24-.22,2.64,2.64,0,0,0-2.8-2.51c-2,0-3.07,1.46-3.07,4.08v1.58c0,2.57,1.11,4,3.07,4A2.59,2.59,0,0,0,16.43,16a.23.23,0,0,1,.24-.22h1.71a.14.14,0,0,1,.14.14C18.52,18.37,16.45,20.14,13.63,20.14Z\"\n\nexport const MODELS = ['00', '01', '10', '11']\n\nexport const HYPO = [\n  {info: 'The concept is useful to M+ and would be useful to M'},\n  {info: 'The concept is harmful to M+ and would be harmful to M'},\n  {info: 'M has already learned the concept ξ adequately'},\n  {info:\"M+ has learned the concept ξ adequately\"},\n  {info:\"The extra information in D+ has a positive effect on M\"},\n  {info:\"The extra information in D+ has a negative effect on M\"},\n {info: \" The extra information in D+ has a positive effect on M+\"},\n {info: \" The extra information in D+ has a negative effect on M+\"},\n {info: \" Leaning with Dm+ affects the extra part of M+ positively\"},\n {info: \"Leaning with Dm+ affects the extra part of M+ negatively\"},\n {info: \"Leaning with Dm+ affects the M part of M+ positively\"},\n {info: \"Leaning with Dm+ affects the M part of M+ negatively\"},\n]\n\nexport const ANALYSIS = [\n  {\n    pair: ['01', '00'],\n    large: {support:[5], reject:[6]},\n    less: {support:[6], reject:[5]},\n  },\n  {\n    pair: ['10', '00'],\n    large: {support:[11], reject:[12]},\n    less: {support:[12], reject:[11]},\n  },\n  {\n    pair: ['11', '00'],\n    large: {support:[1,4,7], reject:[2,3,8]},\n    less: {support:[2,4,], reject:[1,3]},\n  }, \n  {\n    pair: ['11', '01'],\n    large: {\n      dependHypo: 6,\n      ifReject:{support:[1,4,7], reject:[2,3,8]},\n      ifQuestion: {\n        support:[1,4,7], reject:[2,3,8]\n      },\n      ifSupport:{\n        support:[], reject:[]\n      }\n    },\n    less: {\n      dependHypo: 5,\n      ifReject:{support:[2,4,8], reject:[1,3,7]},\n      ifQuestion: {\n        support:[2,4,8], reject:[1,3,7]\n      },\n      ifSupport:{\n        support:[], reject:[]\n      }\n    }\n  },\n  {\n    pair: ['10', '01'],\n    large: {\n      dependHypo: 6,\n      ifReject:{support:[11], reject:[12]},\n      ifQuestion: {\n        support:[11], reject:[12]\n      },\n      ifSupport:{\n        support:[], reject:[]\n      }\n    },\n    less: {\n      dependHypo: 5,\n      ifReject:{support:[12], reject:[11]},\n      ifQuestion: {\n        support:[12], reject:[11]\n      },\n      ifSupport:{\n        support:[], reject:[]\n      }\n    },\n  },\n  {\n    pair: ['11', '10'],\n    large: {\n      dependHypo: 1,\n      ifReject:{support:[12], reject:[11]},\n      ifQuestion: {\n        support:[9], reject:[10]\n      },\n      ifSupport:{\n        support:[7,9], reject:[8, 10]\n      }\n    },\n    less: {\n      dependHypo: 2,\n      ifReject:{support:[10], reject:[9]},\n      ifQuestion: {\n        support:[10], reject:[9]\n      },\n      ifSupport:{\n        support:[8,10], reject:[7, 9]\n      }\n    }\n  },\n  \n  \n  \n]\n\n","import {Label} from 'types'\nexport const LABELNAMES = ['airplane', 'automobile', 'bird', 'cat', 'deer', 'dog', 'frog', 'horse', 'ship', 'truck']\nexport const LABELS:Label[] = ['0','1', '2', '3', '4', '5', '6', '7', '8', '9']\n\n\n// **********\n// view\n// **********\n\nexport const widthRatio = {'model':0.3, 'p':0.2, 'hypo':0.45}\n\nexport const headerView = {\n    width:window.innerWidth||0, \n    height: (window.innerHeight*0.08)||0\n}\n\nexport const TitleView = {\n    height: window.innerHeight*0.1,\n    width: window.innerWidth,\n}\n\nvar margin = {top: 30, right: 10, bottom: 50, left: 30}\n\nexport const overView = {\n    width: window.innerWidth, \n    height: (window.innerHeight*0.8)||0,\n    margin,\n}\n\nexport const HypoTextView = {\n    height: window.innerHeight*0.3,\n    width: overView.width*widthRatio.hypo,\n    margin\n}\n\nexport const hypoMatrixView = {\n    width: overView.width*widthRatio.hypo,\n    height: (window.innerHeight*0.3)||0,\n    margin\n}\n\nexport const modelView = {\n    width: overView.width*widthRatio.model,\n    height: (window.innerHeight*0.3)||0,\n    margin\n}\n\nexport const pView = {\n    width: overView.width*widthRatio.p,\n    height: (window.innerHeight*0.3)||0,\n    margin\n}\n\n","import * as d3 from 'd3'\nimport { Painter} from 'components/Painter'\nimport {percentile, NormalDist, getText} from 'helper';\nimport {ViewParams, CompareData} from 'types'\nimport { drag, EnterElement, BaseType } from 'd3';\n\n\ntype Data = CompareData[0]\n\ninterface Params extends Data, ViewParams{}\n\nexport default class  PGlyphPainter implements Painter<Data, ViewParams>{\n    static m = 0; static std = 1\n    static arr = NormalDist(PGlyphPainter.m, PGlyphPainter.std)\n    private viewParams: ViewParams;\n    constructor(viewParams: ViewParams) {\n        this.viewParams = viewParams\n    }\n    update(newParams: Partial<ViewParams>) {\n        this.viewParams = { ...this.viewParams, ...newParams }\n        return this\n    }\n    render(selector:d3.Selection<SVGElement, Data, any, any>|d3.Selection<SVGGElement, Data, any, any>) {\n        let {width, height, margin} = this.viewParams\n        let {m, std} = PGlyphPainter\n        \n\n        width = width - margin.left-margin.right\n        height = height-margin.top-margin.bottom\n\n        let g = selector\n\n        var xScale = d3.scaleLinear()\n            .domain([m-4*std, m+4*std])\n            .range([0, width]);\n\n        var yScale = d3.scaleLinear()\n        .domain([0, Math.max(...PGlyphPainter.arr.map(d=>d[1]))])\n        .range([height, 0]);\n\n        var line = d3.line()\n            .x((d)=>xScale(d[0]))\n            .y((d)=>yScale(d[1]))\n\n        \n\n        g.append('path')\n        .datum(PGlyphPainter.arr)\n        .attr(\"class\", \"dist\")\n        .attr(\"d\", line)\n        .style(\"fill\", \"cornflowerblue\")\n        \n        \n        g.append(\"clipPath\")       // define a clip path\n        .attr(\"id\", (d,i)=>`${d.from}_${d.to}`) // give the clipPath an ID\n        .append('rect')\n        .attr('class', 'z')\n        .attr('x', d=>xScale(percentile(d.p, m, std)))\n        .attr('width', d=>width-xScale(percentile(d.p, m, std)))\n        .attr('y', 0)\n        .attr('height', height)\n        .attr('fill','orange')\n        .style(\"opacity\", \"0.8\");\n\n        g.append('path')\n        .attr(\"clip-path\", (d,i)=>`url(#${d.from}_${d.to})`)\n        .datum(PGlyphPainter.arr)\n        .attr(\"class\", \"dist\")\n        .attr(\"d\", line)\n        .style(\"fill\", \"orange\")\n\n        let text = g.append('text')\n        .attr('class', 'pValue')\n        \n\n        text.append('tspan')\n        .text(d => d.p.toFixed(3))\n        .attr(\"text-anchor\", 'middle')\n        .attr('x', width/2)\n        // .attr('x', d => (ratio.p+ratio.model)*width)\n        .attr('y', 1.4*height)\n\n        \n\n        text.append('tspan')\n        .text(d => {\n            return `${getText(d.from)}${d.dir=='+'?'>':'<'}${getText(d.to)}`\n        })\n        .attr('x', width/2)\n        // .attr('x', d => (ratio.p+ratio.model)*width)\n        .attr('y', 15+1.4*height)\n        .attr(\"text-anchor\", 'middle')\n\n\n\n        return this\n    }\n}","import * as d3 from 'd3'\nimport { Painter } from 'components/Painter'\n\nimport { ViewParams, CompareData, Results, Label, Metric, ModelData, OneModel, Ratio } from 'types'\nimport { curveMaker, pairedT, getColor, get95conf, getText } from 'helper'\nimport { LABELS } from 'const'\nimport PGlyphPainter from './PGlyph'\n\nexport interface Data {\n    modelData:ModelData,\n    compareData: CompareData,\n    thr:number\n}\n\nexport interface Params extends Data {\n    modelView: ViewParams,\n    pView: ViewParams\n }\n\n\nexport default class OverViewPainter implements Painter<Data, ViewParams>{\n    private params: Params; r: number = 8\n    constructor(params: Params) {\n        this.params = params\n    }\n    update(newParams: any) {\n        this.params = { ...this.params, ...newParams }\n        return this\n    }\n    \n\n    // ************\n    // view controllers\n    // *************\n    toggleDetails(d:OneModel, xScale:d3.ScaleLinear<number, number>, yScale:d3.ScalePoint<string>){\n        let details = d3.select('g.details')\n\n        if (d.hasDetails){\n            details.selectAll(`circle.detail.R${d.name}`)\n            .remove()\n\n            d.hasDetails = false\n        }else{\n            details.selectAll(`circle.detail.R${d.name}`)\n            .data(d.arr)\n            .join(\n                enter=>enter.append('circle')\n                .attr('class', (_,i)=>`detail R${d.name} label_${i}`)\n                .attr('cx', d=>xScale(d))\n                .attr('cy', yScale(d.name)||0),\n                \n                update=>update\n                .attr('cx', d=>xScale(d))\n                .attr('cy', yScale(d.name)||0),\n\n                exit=>exit.remove()\n            )\n            .attr('r', this.r*0.8)\n            .attr('fill', (d,i)=>getColor(i))\n\n            d.hasDetails = true\n        } \n\n        \n    }\n    drawDetailLinks(models:ModelData, xScale:d3.ScaleLinear<number, number>, yScale:d3.ScalePoint<string>){\n        let detailLinks = d3.select('g.detailLinks')\n\n        let detailedModels = models.filter(d=>d.hasDetails)\n        // if (detailedModels.length<2) return\n\n        let d3curve = d3.line()\n        .curve(d3.curveCatmullRom.alpha(0.5))\n\n        detailLinks.selectAll(`path.detailLink`)\n            .data(LABELS)\n            .join(\n                enter=>enter.append('path')\n                .attr('class', 'detailLink')\n                .attr('d', (_, i)=>{\n                    let linkdata = detailedModels.map(m=>{return [xScale(m.arr[i]), yScale(m.name)||0] as [number, number]})\n                    return d3curve(linkdata)\n                }),\n\n                update => update\n                .attr('d', (_, i)=>{\n                    let linkdata = detailedModels.map(m=>{return [xScale(m.arr[i]), yScale(m.name)||0] as [number, number]})\n                    return d3curve(linkdata)\n                }),\n\n                exit=> exit\n                .remove()\n            )\n            .attr('stroke', (_, i)=>getColor(i))\n            .attr('fill', 'none')\n            .attr('stroke-width', 2)\n\n    }\n\n    // *********\n    // render\n    // *********\n    render(selector: d3.Selection<SVGElement, any, any, any>) {\n        selector.selectAll('*').remove()\n\n        let { modelView, pView, modelData, compareData } = this.params\n\n        // ***********\n        // draw model points\n        // ***********\n\n\n\n        // Set the ranges\n        const xmin = Math.min(...modelData.map(d => Math.min(...d.arr))) || 0\n        const xmax = Math.max(...modelData.map(d => Math.max(...d.arr))) || 1\n\n        let accScale = d3.scaleLinear()\n            .range([0, modelView.width-modelView.margin.left-modelView.margin.right])\n            .domain([xmin, xmax])\n        // .domain([0.7,1])\n\n\n        let yScale = d3.scalePoint()\n            .range([0, modelView.height])\n            .domain(modelData.map(d => d.name))\n\n       \n\n\n        // **************************\n        // models \n        // **************************\n\n\n        let modelGroup = selector.append('g')\n            .attr('class', 'models')\n            .attr(\"transform\", `translate(${pView.width+ modelView.margin.left},${pView.margin.top})`)\n\n        // // append x axis\n        // modelGroup.append(\"g\")\n        // .attr(\"transform\", `translate(0,${height})`)\n        // .call(d3.axisBottom(accScale))\n\n        let std = modelGroup.append('g')\n            .attr('class', 'std')\n\n        std.selectAll('line.std')\n            .data(modelData)\n            .join(\n                enter => enter.append('line')\n                    .attr('x1', (d) => accScale(d.avg - d.err))\n                    .attr('x2', (d) => accScale(d.avg + d.err))\n                    .attr('y1', (d) => yScale(d.name) || 0)\n                    .attr('y2', (d) => yScale(d.name) || 0),\n\n                update => update\n                    .attr('x1', (d) => accScale(d.avg - d.err))\n                    .attr('x2', (d) => accScale(d.avg + d.err))\n                    .attr('y1', (d) => yScale(d.name) || 0)\n                    .attr('y2', (d) => yScale(d.name) || 0),\n\n                exit=>exit.remove()\n            )\n            .style('stroke', \"black\")\n\n\n\n\n\n        let points = modelGroup.append('g')\n            .attr('class', 'points')\n\n        d3.select('g.points')\n            .append('g')\n            .attr('class', 'details')\n\n        d3.select('g.points')\n            .append('g')\n            .attr('class', 'detailLinks')\n\n        this.drawDetailLinks(modelData, accScale, yScale)\n\n        points.selectAll('circle.point')\n            .data(modelData)\n            .join(\n                enter => enter.append(\"circle\")\n                    .attr('cx', (d) => accScale(d.avg))\n                    .attr('cy', (d) => yScale(d.name) || 0),\n\n                update => update.attr('cx', (d) => accScale(d.avg))\n                    .attr('cy', (d) => yScale(d.name) || 0),\n\n                exit => exit.remove()\n            )\n            .attr('class', 'point')\n            .attr('r', this.r)\n            .attr(\"stroke\", \"black\")\n            .attr(\"fill\", \"white\")\n            .on('click', (d)=>{\n                this.toggleDetails(d, accScale, yScale)\n                this.drawDetailLinks(modelData, accScale, yScale)\n            })\n\n\n\n        let labels = modelGroup.append('g')\n            .attr('class', 'labels')\n\n        labels.selectAll('text.point')\n            .data(modelData)\n            .join(\n                enter => enter.append(\"text\")\n                    .attr('class', 'label')\n                    .attr('x', 0)\n                    // .attr('x',0)\n                    .attr('y', (d) => (yScale(d.name) || 0)-2*this.r)\n                    .text(d => getText(d.name)),\n\n                update => update\n                    .attr('x', 0)\n                    .attr('y', (d) => (yScale(d.name) || 0)-2*this.r)\n                    .text(d => getText(d.name)),\n\n                exit => exit.remove()\n            )\n            .attr('text-anchor', 'start')\n\n        let pointValue = modelGroup.append('g')\n            .attr('class', 'values')\n\n        pointValue.selectAll('text.value')\n            .data(modelData)\n            .join(\n                enter => enter.append(\"text\")\n                    .attr('class', 'value')\n                    .attr('x', (d) => accScale(d.avg) - this.r)\n                    .attr('y', (d) => (yScale(d.name) || 0) - 2 * this.r)\n                    .text((d) => d.avg.toFixed(4)),\n\n                update => update\n                    .attr('x', (d) => accScale(d.avg) - this.r)\n                    .attr('y', (d) => (yScale(d.name) || 0) - 2 * this.r)\n                    .text((d) => d.avg.toFixed(4)),\n\n                exit => exit.remove()\n            )\n\n\n        // *****************\n        // draw p links\n        // *******************\n        let pValueScale = d3.scaleLinear()\n        .domain([Math.min(...compareData.map(d=>d.p)), Math.max(...compareData.map(d=>d.p))])\n        .range([2, 0.8])\n\n\n        let yScaleP = d3.scaleLinear()\n            .range([0, pView.height])\n            .domain([0, compareData.length - 1])\n\n        let pGroup = selector.append('g')\n            .attr('class', 'pValues')\n            .attr(\"transform\", `translate(${pView.margin.left},${pView.margin.top})`)\n        \n        let pGlyphParams = {\n                width: yScaleP(1)*1.5,\n                height: yScaleP(1)*0.5,\n                margin:{top:1, bottom:1, left:1, right:1}\n            }\n\n\n        pGroup.selectAll('path.pValue')\n            .data(compareData)\n            .join(\n                enter => enter.append('path')\n                    .attr('class', 'pValue')\n                    .attr('d', (d, i) => {return `M${pView.width} ${yScale(d.from) || 0} L${pGlyphParams.width*0.5} ${yScaleP(i) || 0}\n                            L${pView.width} ${yScale(d.to) || 0}`\n                    }),\n\n                update=>update\n                .attr('d', (d, i) => {return `M${pView.width} ${yScale(d.from) || 0} L${pGlyphParams.width*0.5} ${yScaleP(i) || 0}\n                            L${pView.width} ${yScale(d.to) || 0}`\n                    }),\n\n                exit=>exit.remove()\n            )\n            .attr('fill', 'none')\n            .attr('stroke', 'black')\n            .attr(\"stroke-dasharray\", (d) => `8, ${d.p > this.params.thr ? 4 : 0}`)\n            .attr('stroke-width', d => {\n                return pValueScale(d.p)})\n\n        // ********************************\n        // draw the p value glyph\n        // ********************************\n\n        // pGroup.selectAll('g.pGlyph')\n        //     .data(compareData)\n        //     .join(\n        //         // enter=>enter.append('g')\n        //         // .attr('class', 'pGlyph')\n        //         // .attr('transform', (d,i)=>`translate(${0-pGlyphParams.width/2}, ${yScaleP(i)-pGlyphParams.height*0.8})`)\n        //         // .call(\n        //         //     selector => new PGlyphPainter(pGlyphParams)\n        //         //     .render(selector)\n        //         // ),\n        //         // exit=>exit.remove()\n        //         enter=>enter.append('circle')\n        //         .attr('cy', (d,i)=>yScaleP(i)-pGlyphParams.height*0.8+15*d.p)\n        //         .attr('cx', (d)=>15*d.p)\n        //         .attr('r', (d)=>15*Math.sqrt(d.p))\n        //         .attr('stroke', 'black')\n        //     )\n            \n            pGroup.selectAll('g.pGlyph')\n            .data(compareData)\n            .join(\n                enter=>enter.append('g')\n                .attr('class', 'pGlyph')\n                .attr('transform', (d,i)=>`translate(${0-pGlyphParams.width/2}, ${yScaleP(i)-pGlyphParams.height*0.8})`)\n                .call(\n                    selector => new PGlyphPainter(pGlyphParams)\n                    .render(selector)\n                ),\n                exit=>exit.remove()\n                // enter=>enter.append('circle')\n                // .attr('cy', (d,i)=>yScaleP(i)-pGlyphParams.height*0.8+15*d.p)\n                // .attr('cx', (d)=>15*d.p)\n                // .attr('r', (d)=>15)\n                // .attr('stroke', 'black')\n                // .attr('fill', 'none')\n            )\n            \n\n\n        return this\n    }\n}","import React from 'react';\nimport * as d3 from 'd3';\nimport ModelPainter, {Params} from '../Models/ModelPainter';\nimport {HypoTextView, modelView, pView} from 'const'\nimport {CompareData, ModelData} from 'types';\n\ninterface Props {\n    modelData: ModelData,\n    compareData: CompareData,\n    thr:number\n}\n\n\nexport default class Overview extends React.Component<Props, {}>{\n    private painter:ModelPainter\n    constructor(props:any){\n        super(props)\n        let params = {\n            modelView,\n            pView,\n            ...this.props,\n        }\n        this.painter = new ModelPainter(params)\n    }\n    painterUpdate(newParams: Partial<Params>){\n        this.painter.update(newParams)\n        .render(d3.select('g.modelPainter'))\n    }\n    // componentDidMount(){\n    //     this.getJSON('data/results.json')\n\n    // }\n    shouldComponentUpdate(nextProps:Props){\n        this.painterUpdate(nextProps)\n        return false\n    }\n    render(){\n        return <g className='modelPainter' transform={`translate(${HypoTextView.width}, ${HypoTextView.height})`}/>\n    }\n}","import * as d3 from 'd3'\nimport { Painter } from 'components/Painter'\nimport {ViewParams, StatuMatrix, STATUS} from 'types';\nimport { HYPO, questionIcon, rejectIcon, supportIcon, conditionIcon, dummyIcon, curveMaker, ANALYSIS} from 'helper';\n\nexport interface Data {\n    status: StatuMatrix\n}\nexport interface Params extends ViewParams, Data {\n }\n\n\nexport default class  PGlyphPainter implements Painter<Data, ViewParams>{\n    private params: Params; r: number = 8\n    constructor(params: Params) {\n        this.params = params\n    }\n\n    update(newParams: Partial<Params>) {\n        this.params = { ...this.params, ...newParams }\n        return this\n    }\n\n    render(selector:d3.Selection<SVGGElement, Data, any, any>) {\n        let {status, height, width, margin} = this.params\n        // height = height - margin.top - margin.bottom\n        width = width - margin.left - margin.right\n\n\n        // let yScale = d3.scaleLinear()\n        // .domain([0, status.length+1])\n        // .range([0, height])\n\n        let xBand = width/(HYPO.length), yBand = height/(ANALYSIS.length-1)\n\n        let hypoGroups = selector.selectAll('g.hypo')\n        .data(status)\n        .join(\n            enter => enter.append('g')\n            .attr('class', 'hypo')\n            .attr('transform',(_,i)=>`translate(${xBand *i}, ${yBand*0.5})`),\n\n            update =>update\n            .attr('class', 'hypo')\n            .attr('transform',(_,i)=>`translate(${xBand *i}, ${yBand*0.5})`)\n        )\n\n\n        \n\n        // draw icon\n        hypoGroups.selectAll('path.statusIcon')\n        .data(d=>d)\n        .join(\n            enter => enter.append('path')\n            .attr('class', 'statusIcon')\n            .attr('d', d=>getIconPath(d))\n            .attr('fill', d=>getIconColor(d))\n            .attr('stroke', d=>(d.status==undefined)?'gray':'none')\n            .attr('stroke-width', '2')\n            .attr('transform', (_,j)=>`translate(${0}, ${yBand *j}) `),\n\n            update=>update\n            .attr('d', d=>getIconPath(d))\n            .attr('fill', d=>getIconColor(d))\n            .attr('stroke', d=>(d.status==undefined)?'gray':'none')\n            .attr('stroke-width', '2')\n            .attr('transform', (_,j)=>`translate(${0}, ${yBand*j}) `),\n\n            exit => exit.remove()\n        )\n\n        // // draw dependent hypo\n        // hypoGroups.selectAll('path.ifHypo')\n        // .data((d, i)=>d.map((anly)=>{\n        //     return {anly, hypoIdx:i}\n        // }))\n        // .join(\n        //     enter=>enter.append('path')\n        //     .attr('class', 'ifHypo')\n        //     .attr('d', (d,j)=>{\n        //         let {anly, hypoIdx} = d\n        //         // return anly.if?`M${xBand*status[0].length} ${yBand*(anly.if-1-hypoIdx+0.5)+xBand*0.5} L${xBand*(j+0.5)} ${yBand*(0.5)}`:''\n        //         let dependHypoPos:[number, number] = [xBand*((anly.if||0)-1-hypoIdx), yBand*(status[0].length-0.5)],\n        //         currentAnalyPos:[number, number] = [0, yBand*(j+0.5)]\n        //         // if ((anly.if||0)<hypoIdx){\n        //         //     [dependHypoPos, currentAnalyPos] = [currentAnalyPos, dependHypoPos]\n        //         // }\n\n        //         if (! anly.if) return ''\n        //         else if (anly.if>hypoIdx) return curveMaker(dependHypoPos, currentAnalyPos) \n        //         else return curveMaker(currentAnalyPos, dependHypoPos)\n        //     }),\n\n        //     update=>update\n        //     .attr('d', (d,j)=>{\n        //         let {anly, hypoIdx} = d\n        //         // return anly.if?`M${xBand*status[0].length} ${yBand*(anly.if-1-hypoIdx+0.5)+xBand*0.5} L${xBand*(j+0.5)} ${yBand*(0.5)}`:''\n        //         let dependHypoPos:[number, number] = [xBand*((anly.if||0)-1-hypoIdx), yBand*(status[0].length-0.5)],\n        //         currentAnalyPos:[number, number] = [0, yBand*(j+0.5)]\n        //         // if ((anly.if||0)<hypoIdx){\n        //         //     [dependHypoPos, currentAnalyPos] = [currentAnalyPos, dependHypoPos]\n        //         // }\n\n        //         if (! anly.if) return ''\n        //         else if (anly.if>hypoIdx) return curveMaker(dependHypoPos, currentAnalyPos) \n        //         else return curveMaker(currentAnalyPos, dependHypoPos)\n        //     }),\n        //     exit => exit.remove()\n\n        // )\n        // .attr('stroke', 'black')\n        // .attr('fill', 'none')\n\n\n        return this\n    }\n\n}\n\nfunction getIconPath(d: StatuMatrix[0][0]){\n    switch (d.status){\n        case 1: return supportIcon \n        case 0: return questionIcon \n        case -1: return rejectIcon\n        case 'if': return conditionIcon\n        default: return dummyIcon\n    }\n}\n\nfunction getIconColor(d: StatuMatrix[0][0]){\n    switch (d.status){\n        case 1: return 'cornflowerblue'; \n        case 0: return 'gray';\n        case -1: return 'orange';\n        case 'if': return 'black'\n        default: return 'none';\n    }\n}\n","import * as React from \"react\"\nimport * as d3 from 'd3'\nimport { CompareData, StatuMatrix } from 'types'\nimport { HYPO, ANALYSIS } from 'helper'\nimport { hypoMatrixView, HypoTextView} from 'const'\nimport \"./index.css\"\nimport HypoPainter, { Params } from './HypoPainter'\n\n\n\ninterface Props {\n    status: StatuMatrix\n}\n// const THR = 0.02\n\nexport default class Hypothesis extends React.Component<Props, {}> {\n    private painter: HypoPainter\n    constructor(props: any) {\n        super(props)\n        let { height, margin, width } = hypoMatrixView\n        let { status} = this.props\n\n        \n        let params = {\n            height,\n            width,\n            margin,\n            status\n        }\n        this.painter = new HypoPainter(params)\n    }\n    painterUpdate(newParams: Partial<Params>) {\n        this.painter.update(newParams)\n            .render(d3.select('g.hypos'))\n    }\n    componentWillUpdate(nextProps: Props) {\n        let params = { status: nextProps.status }\n        this.painterUpdate(params)\n        return false\n    }\n    componentDidMount() {\n        this.painter.render(d3.select('g.hypos'))\n    }\n    render() {\n        let { margin} = hypoMatrixView\n\n\n\n        return <g transform={`translate(${margin.left}, ${HypoTextView.height})`} className='hypos' />\n    }\n}","import * as React from \"react\"\nimport * as d3 from 'd3'\nimport { StatuMatrix } from 'types'\nimport {  HYPO } from 'helper'\nimport { HypoTextView } from 'const'\n\n\n\ninterface Props {\n    status: StatuMatrix\n}\n\n\nexport default class Hypothesis extends React.Component<Props, {}> {\n\n    textColor(status:number){\n        // if (status==0) return 'grey';\n        // else if(status>0) return 'cornflowerblue';\n        // else if (status<0) return 'orange';\n\n        if (status==0) return '#7a7a7a';\n        else if(status>0) return '#000';\n        else if (status<0) return '#c0c0c0';\n    }\n\n    render() {\n        let { height, width, margin } = HypoTextView\n        let {status} = this.props\n\n        let hypoStatus = status.map(anlyList=>{\n            return anlyList.filter(d=>typeof(d.status)=='number').reduce((acc, curr)=>acc+ (curr.status as number), 0)\n        })\n\n        width = width - margin.left - margin.right\n        height = height - margin.top - margin.bottom\n\n        let xScale = d3\n            .scaleLinear()\n            .domain([0, HYPO.length])\n            .range([0, width])\n\n\n        let hypoInfo = HYPO.map((hypo,i)=>{\n            return <g className='hypoInfo' transform={`translate(${xScale(i)}, ${height})`}>\n                <text className='hypoNumber' fontWeight='bold' fontSize={18} fill={this.textColor(hypoStatus[i])}>\n                    {`H${i+1}`}\n                </text> \n                <text className='hypoText' transform={`translate(10, -20) rotate(-50)`} fontSize={16} fill={this.textColor(hypoStatus[i])}>\n                    {hypo.info.slice(0, hypo.info.length/2+1)}\n                </text>   \n                <text className='hypoText' transform={`translate(30, -20) rotate(-50)`} fontSize={16} fill={this.textColor(hypoStatus[i])}>\n                    {hypo.info.slice(hypo.info.length/2+1)}\n                </text>        \n            </g>\n        })\n\n       \n        return <g\n            className='hypoInfos'\n            transform={`translate(${margin.left}, ${margin.top})`}\n        >\n           {hypoInfo}\n        </g>\n    }\n}","import axios, { AxiosResponse } from 'axios';\nimport {AccuracyData, Results} from 'types'\n\nfunction checkResponse<T>(response: AxiosResponse<T>, fallback: T): T {\n    if (response.status === 200)\n      return response.data;\n    console.error(`Data fetching error: ${response.status}`);\n    console.error(response);\n    throw response;\n}\n\n\nexport async function fetchCSV(filename:string):Promise<AccuracyData>{\n    const response = await axios.get(filename);\n    if (response.status === 200){\n      let res = response.data\n      return res.split('\\n').map((line:string)=>{\n        let v =line.split(',')\n        return [v[0], parseFloat(v[1])||Math.random()*0.035+0.81]\n      })\n    }\n    console.error(`Data fetching error: ${response.status}`);\n    throw response;\n}\n\n\nexport async function fetchJSON(filename:string):Promise<Results>{\n  const response = await axios.get(filename);\n  return checkResponse(response, null);\n}","import * as React from \"react\"\nimport { Card, Select, Icon, InputNumber } from \"antd\"\nimport {StatuMatrix} from 'types'\nimport \"./index.css\"\nimport {headerView, widthRatio, HypoTextView, TitleView} from 'const'\n\nconst { Option } = Select\n\ninterface Props{\n    changeTHR:(thr:number|undefined)=>void\n}\n\n\n\nexport default class Header extends React.Component<Props, {}> {\n    render() {\n        let {width, height} = headerView\n\n        let modelSelector = <Select defaultValue=\"CNN\" >\n            <Option value=\"CNN\">CNN</Option>\n        </Select>\n\n        let pSelector = <InputNumber min={0} max={0.5} step={0.01}  defaultValue={0.05} onChange={this.props.changeTHR}/>\n\n        \n        let reject = false\n        let checkIcon = <Icon type={`${reject?\"close\":\"check\"}-circle`} style={{fontSize: \"1.6em\"}}/>\n\n        return <div className='header' style={{width, height, position:\"absolute\", top: HypoTextView.height-HypoTextView.margin.top+TitleView.height, overflow:\"auto\"}}>\n\n            \n\n\n            <div className='hypo component' style={{width: (width||0)*widthRatio.hypo, height}}>\n                <h3>Hypothesis</h3>\n                {/* <Card size=\"small\" title={<span>Model Hypothesis</span>} >\n                    The model <b>M</b>  has learned the feature <b>F</b> from the original dataset <b>D</b> \n                    \n                </Card>\n\n                <Card size=\"small\" title={<span>Feature Hypothesis</span>} >\n                    The Feature <b>F</b> is helpful for the prediction.\n                    \n                </Card> */}\n            </div>\n\n            <div className='p_value component' style={{width: (width||0)*widthRatio.p, height}}>\n                <h3>P Values\n                { pSelector}\n                </h3> \n            </div>\n\n            <div className='Model component' style={{width: (width||0)*widthRatio.model, height}}>\n                <h3>Models\n                { modelSelector} \n                </h3> \n            </div>\n\n            \n\n            \n        </div>\n    }\n}","import * as React from 'react';\nimport {Select, Button} from \"antd\";\nimport {TitleView} from 'const';\nimport './index.css';\n\nconst {Option} = Select\nlet {width, height} = TitleView\n\nconst style = {\n    backgroundColor: 'black',\n    color: 'white',\n    width,\n    height,\n    padding: '10px 30px'\n}\n\nconst darkSelectStyle = {\n    backgroundColor: 'black', color:\"white\"\n}\n\nexport interface Props{\n    filename:string,\n    changeResults:(filename:string)=>void\n}\n\n\nexport default class InfoPanel extends React.Component<Props, {}>{\n    private dataset:string; concept:string\n    constructor(props:Props){\n        super(props)\n        this.dataset=''\n        this.concept = ''\n        this.changeResults=this.changeResults.bind(this)\n        this.changeConcept=this.changeConcept.bind(this)\n        this.changeData=this.changeData.bind(this)\n    }\n    changeResults(e:any){\n        let {dataset, concept}=this\n        e.preventDefault();\n        this.props.changeResults(`${dataset}_${concept}.json`)\n    }\n    changeConcept(concept:any){\n        this.concept=concept\n    }\n    changeData(dataset:any){\n        this.dataset=dataset\n    }\n    render(){\n        let {filename}=this.props\n        let [data, concept] = filename.replace('.json','').split('_')\n        let featureSelector = <Select defaultValue={concept} size=\"small\" style={darkSelectStyle}\n        onChange={this.changeConcept}\n        >\n            {\n            [\n                '1.Rotating',\n                '2.RandomScaling',\n                '3.Scaling_RotationCorrected',\n                '4.AverageIntensity',\n                '5.IntensityScaling',\n                '6.RandomClassNumber',\n                '7.ScaledClassNumber',\n                '8.RotatingwithBlack',\n                \"HOG\", \n            ].map(d=>{\n                return <Option value={d} style={darkSelectStyle}>{d}</Option>\n            })\n            }\n            {/* <Option value=\"HOG\" style={darkSelectStyle}>HOG</Option>\n            <Option value=\"Rotating\" style={darkSelectStyle}>Rotating</Option>\n            <Option value=\"Scaling\" style={darkSelectStyle}>Scaling</Option>\n            <Option value=\"ScaledandRotated\" style={darkSelectStyle}>ScaledandRotated</Option> */}\n        </Select>\n\n        let datasetSelector = <Select \n        defaultValue={data} size=\"small\" \n        style={darkSelectStyle}\n        onChange={this.changeData}\n        >\n            \n            <Option value=\"fashion\" style={darkSelectStyle}>fashion</Option>\n            <Option value=\"cifar10\" style={darkSelectStyle}>cifar10</Option>\n        </Select>\n\n        return <div className='InfoPanel' style={style}>\n            <img\n                className='title logo' \n                src='test.png' height={style.height/2}/>\n            <div \n                className='title'\n                style={{fontSize: style.height/2*0.8+'px', lineHeight:style.height/2+'px', margin: \"0px 15px\"}}\n                > \n                HypoML\n            </div>\n\n            <div className='selector dark' style={{width: 'auto', height: style.height}}>\n                { featureSelector } \n                { datasetSelector } \n                <Button htmlType=\"submit\" shape=\"circle\" icon=\"caret-right\" onClick={this.changeResults}/>\n            </div>\n\n            </div>\n    }\n}","import React from 'react';\nimport Models from 'components/Models';\nimport HypoStatus from 'components/HypoStatus';\nimport HypoInfo from 'components/HypoInfo';\nimport {CompareData, Results, ModelData, Label, Metric, StatuMatrix} from 'types';\nimport {fetchJSON} from 'dataService'\nimport {LABELS, overView} from 'const'\nimport {get95conf, pairedT, ANALYSIS, HYPO, MODELS} from 'helper';\nimport Header from 'components/Header';\nimport InfoPanel from 'components/InfoPanel';\nimport { stat } from 'fs';\n\ninterface States {\n    modelData: ModelData,\n    compareData: CompareData,\n    filename:string,\n    thr:number\n}\n\nconst METRIC = 'precision'\n\nexport default class Overview extends React.Component<{}, States>{\n    \n    constructor(props:any){\n        super(props)\n        this.state={\n            filename:'cifar10_hog.json',\n            modelData:[],\n            compareData: [],\n            thr:0.1\n        }\n        this.changeResults=this.changeResults.bind(this)\n        this.changeTHR = this.changeTHR.bind(this)\n        \n    }\n    // **************\n    // data transformers\n    // ****************\n    getModeldata(res: Results): ModelData {\n        let modelData: ModelData = MODELS.map(name => {\n            let re = res[name]\n            let err = get95conf([...Array(10).keys()].map((d) => {\n                let label = d.toString() as Label\n                return re[label][METRIC]\n            }))\n            \n            let avg = re['avg'][METRIC]\n            return {\n                name, avg, err,\n                arr: LABELS.map(l => re[l][METRIC]),\n                hasDetails: false\n            }\n        })\n\n        return modelData\n\n    }\n    getCompareData(res: Results): CompareData {\n        let compareData: CompareData = ANALYSIS.map(a=>{\n            let pair = a.pair, modelA = pair[0], modelB = pair[1]\n            let samplesA = LABELS.map(l => res[modelA][l][METRIC]),\n                    samplesB = LABELS.map(l => res[modelB][l][METRIC])\n\n                return ({\n                    from: modelA,\n                    to: modelB,\n                    p: pairedT(samplesA, samplesB, 1),\n                    dir: res[modelA].avg[METRIC]>res[modelB].avg[METRIC]?'+':'-'\n                })\n        })\n        return compareData\n    }\n    calculateStatus(compareData: CompareData): StatuMatrix {\n        let results: StatuMatrix = HYPO.map(d => ANALYSIS.map(d => {\n            return { status: undefined, if: undefined }\n        }))\n\n        // set status to 0 if analysis and hypo is related\n        ANALYSIS.forEach((anly, j)=>{\n            [anly.large, anly.less].forEach(res=>{\n                if(res.dependHypo){\n                    [res.ifSupport, res.ifSupport, res.ifReject].forEach(conclu=>{\n                        [conclu.support, conclu.reject].forEach((hypos)=>{\n                            hypos.forEach(hypoIdx=>results[hypoIdx-1][j].status=0)\n                        })\n                    })\n                }else{\n                    [res.support, res.reject].forEach((hypos)=>{\n                        if(hypos) hypos.forEach(hypoIdx=>results[hypoIdx-1][j].status=0)\n                    })\n                }\n            })\n        })\n\n\n        \n\n        compareData.forEach((comp, j) => {\n\n            if (comp.p < this.state.thr) {\n                let res: any\n                // significant larger\n                if (comp.dir == '+') {\n                    res = ANALYSIS[j].large\n                    let dependHypo = res.dependHypo\n                    if (dependHypo) {\n                        let dependHypoStatus: number = results[res.dependHypo - 1]\n                            .filter(item => item.status != undefined)\n                            .reduce((total: number, item: any) => total + item.status, 0)\n                        if (dependHypoStatus > 0) {\n                            res = res.ifSupport\n\n                        } else if (dependHypoStatus == 0) {\n                            res = res.ifQuestion\n                        } else if (dependHypoStatus < 0) {\n                            res = res.ifReject\n                        }\n                        // res.support.forEach((hyIdx: number) => {\n                        //     results[hyIdx-1][j].if = dependHypo\n                        // })\n                        // res.reject.forEach((hyIdx: number) => {\n                        //     results[hyIdx-1][j].if = dependHypo\n                        // })\n                    }\n                } else {\n                // significant smaller\n                    res = ANALYSIS[j].less\n                    let dependHypo = res.dependHypo\n                    if (dependHypo) {\n                        let dependHypoStatus: number = results[res.dependHypo - 1]\n                            .filter(item => item.status != undefined)\n                            .reduce((total: number, item: any) => total + item.status, 0)\n\n                        if (dependHypoStatus > 0) {\n                            res = res.ifSupport\n                        } else if (dependHypoStatus == 0) {\n                            res = res.ifQuestion\n                        } else if (dependHypoStatus < 0) {\n                            res = res.ifReject\n                        }\n\n                        // res.support.forEach((hyIdx: number) => {\n                        //     results[hyIdx-1][j].if = dependHypo\n                        // })\n\n                        // res.reject.forEach((hyIdx: number) => {\n                        //     results[hyIdx-1][j].if = dependHypo\n                        // })\n                    }\n                }\n                // console.info(i,j,ANALYSIS[j], res)\n\n                res.support.forEach((hypoIdx: number) => {\n                    results[hypoIdx - 1][j].status = 1\n                })\n                res.reject.forEach((hypoIdx: number) => {\n                    results[hypoIdx - 1][j].status = -1\n                })\n            }\n        })\n\n        // add if status\n\n        // compareData.forEach((comp, j) => {\n            \n        //     if (comp.dir == '+') {\n        //         var dependHypo = ANALYSIS[j].large.dependHypo\n        //         if(dependHypo){\n        //             results[dependHypo-1][j].status='if'\n        //         }\n        //     }else{\n        //         var dependHypo = ANALYSIS[j].less.dependHypo\n        //         if(dependHypo){\n        //             results[dependHypo-1][j].status='if'\n        //         }\n        //     }\n        // })\n        \n\n        results[4][3].status='if'\n        results[4][4].status='if'\n        results[5][3].status='if'\n        results[5][4].status='if'\n        results[0][5].status='if'\n        results[1][5].status='if'\n\n\n        return results\n    }\n    async getResults(filename:string){\n        let res = await fetchJSON('data/'+filename)\n        let modelData = this.getModeldata(res)\n        let compareData = this.getCompareData(res)\n        this.setState({filename, modelData, compareData})\n    }\n    componentDidMount(){\n        this.getResults(this.state.filename)\n    }\n    changeResults(filename:string){\n        this.getResults(filename)\n    }\n    changeTHR(thr:number|undefined){\n        if (typeof(thr)=='number') this.setState({thr})\n    }\n    render(){\n        let {width, height, margin} = overView\n        let {compareData} = this.state\n        let status = this.calculateStatus(compareData)\n        return <div>\n            <InfoPanel changeResults={this.changeResults} filename={this.state.filename}/>\n            <div style={{width, height}}>\n            <svg width={width} height={height} className='svg overview' style={{position:\"absolute\", left:margin.left}}>\n                <HypoInfo status={status} />\n                <HypoStatus status={status} />\n                <Models {...this.state}/>\n            </svg>  \n        </div>\n        <Header changeTHR={this.changeTHR} />\n        </div>\n    }\n}","import React from 'react';\nimport './App.css';\n\nimport Overview from 'components/Overview'\n\n\nconst App: React.FC = () => {\n\n  return (\n    <div className=\"App\">\n      \n      \n      <Overview/>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}